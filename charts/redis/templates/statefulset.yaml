apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.statefulset.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: redis
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ .Values.statefulset.replicas }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.statefulset.image }}
        ports:
        - containerPort: {{ .Values.service.port }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          limits:
            cpu: {{ .Values.statefulset.resources.limits.cpu }}
            memory: {{ .Values.statefulset.resources.limits.memory }}
          requests:
            cpu: {{ .Values.statefulset.resources.requests.cpu }}
            memory: {{ .Values.statefulset.resources.requests.memory }}
        command:
          - redis-server
          - "--appendonly"
          - "yes"
          - "--replica-announce-ip"
          - "$(POD_IP)"
        env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-data-{{ .Values.statefulset.name }}-0
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{ .Values.statefulset.storage.size }}
